{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","showWindow","setShowWindow","switcher","setSwitcher","calc","setCalc","result","setResult","variants","useEffect","push","console","log","numberRef","React","createRef","className","onClick","ref","type","Math","trunc","parseFloat","current","value","map","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAiFeA,EA9EH,WACR,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,UAEJC,qBAAU,WACFL,IACJI,EAASE,KAAKN,GACdI,EAASE,KAAKN,GACdI,EAASE,KAAKN,GACdI,EAASE,KAAKN,GACdO,QAAQC,IAAIJ,GACZD,GAAU,MACZ,CAACH,IAGC,IAAIS,EAAYC,IAAMC,YAEtB,OAAQ,qCACA,qBAAKC,UAAWhB,EAAa,gBAAkB,SAA/C,SACI,wBAAQgB,UAAU,SAASC,QAAS,kBAAMhB,GAAc,IAAxD,qGAEJ,qBAAKe,UAAWhB,EAAa,aAAe,MAA5C,SACI,sBAAKgB,UAAU,QAAf,UACI,gCACA,qBAAKA,UAAU,QAAQC,QAAS,kBAAIhB,GAAc,IAAlD,wDACA,qBAAKe,UAAU,cAAf,sGAGA,qBAAKA,UAAU,oBAAf,yxBAIA,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,oBAAf,6HACA,uBAAOA,UAAU,kBAAkBE,IAAKL,EAAWM,KAAK,cAE5D,qBAAKH,UAAU,OAAOC,QAAS,WAC3BZ,EAASe,KAAKC,MAA6C,GAAtCC,WAAWT,EAAUU,QAAQC,OAAc,IAAM,MAD1E,oEAKClB,EAAQ,sBAAKU,UAAU,WAAf,UACD,2PAGHR,EAASiB,KAAI,SAACD,EAAME,GAAP,OAAe,uBAAOV,UAAU,kBAAjB,SACzB,gCACI,uBAAOA,UAAU,eAAeG,KAAK,WAAWK,MAAM,YACzDA,EAFD,WAEWE,EAAM,EAFjB,0BADiEA,SAOlE,KACP,gCACQ,sBAAMV,UAAU,WAAhB,wFAGJ,sBAAMA,UAAYd,EAA4B,sBAAjB,eACvBe,QAAS,kBAAMd,GAAY,IADjC,kDAIA,sBAAMa,UAAWd,EAAW,eAAiB,sBACvCe,QAAS,kBAAMd,GAAY,IADjC,kDCvDTwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.eb48b3ea.chunk.js","sourcesContent":["import React, {useState,useEffect} from \"react\";\nimport './App.css'\n\nconst App = () => {\n    const [showWindow, setShowWindow] = useState(false)\n    const [switcher, setSwitcher] = useState(false)\n    const [calc, setCalc] = useState(false)\n    const [result, setResult] = useState(false)\n    const [variants, setVariants] = useState([])\n\nuseEffect(()=>{\n    if (calc){\n    variants.push(calc)\n    variants.push(calc)\n    variants.push(calc)\n    variants.push(calc)\n    console.log(variants)\n    setResult(true)}\n},[calc])\n\n\n    let numberRef = React.createRef()\n\n    return (<>\n            <div className={showWindow ? \"knopka active\" : \"knopka\"}>\n                <button className='button' onClick={() => setShowWindow(true)}>Налоговый вычет</button>\n            </div>\n            <div className={showWindow ? \"App active\" : \"App\"}>\n                <div className='modal'>\n                    <div>\n                    <div className='close' onClick={()=>setShowWindow(false)}>Закрыть</div>\n                    <div className='modal-title'>Налоговый вычет\n                    </div>\n                    </div>\n                    <div className='modal-description'>\n                        Используйте налоговый вычет чтобы погасить ипотеку досрочно. Размер налогового вычета\n                        составляет не более 13% от своего официального годового дохода.\n                    </div>\n                    <div className='modal-input'>\n                        <div className='modal-input-title'>Ваша зарплата в месяц</div>\n                        <input className='modal-input-set' ref={numberRef} type='number'/>\n                    </div>\n                    <div className='math' onClick={() => {\n                        setCalc( Math.trunc( parseFloat(numberRef.current.value) * 12 / 100 * 13))\n\n                    }}>Расчитать\n                    </div>\n                    {result? <div className='switcher'>\n                            <div>\n                                Итого можете внести в качестве досрочных:\n                            </div>\n                        {variants.map((value,key) => <label className=\"custom-checkbox\" key={key}>\n                            <div>\n                                <input className='for-checkbox' type=\"checkbox\" value=\"value-1\"/>\n                            {value} в {key + 1 } год\n                            </div>\n                            </label>)}\n\n                    </div>:null}\n                    <div>\n                            <span className='switcher'>\n                                Что уменьшаем?\n                            </span>\n                        <span className={!switcher ? 'switcher-var' : 'switcher-var active'}\n                              onClick={() => setSwitcher(false)}>\n                                Платеж\n                            </span>\n                        <span className={switcher ? 'switcher-var' : 'switcher-var active'}\n                              onClick={() => setSwitcher(true)}>\n                                Срок\n                            </span>\n                    </div>\n                </div>\n\n\n            </div>\n        </>\n    );\n};\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}